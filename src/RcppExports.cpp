// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// runSAX
RObject runSAX(std::vector<float> orgData, int segmentSize, int alphabetSize, bool iSAX);
RcppExport SEXP rsax_runSAX(SEXP orgDataSEXP, SEXP segmentSizeSEXP, SEXP alphabetSizeSEXP, SEXP iSAXSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<float> >::type orgData(orgDataSEXP);
    Rcpp::traits::input_parameter< int >::type segmentSize(segmentSizeSEXP);
    Rcpp::traits::input_parameter< int >::type alphabetSize(alphabetSizeSEXP);
    Rcpp::traits::input_parameter< bool >::type iSAX(iSAXSEXP);
    __result = Rcpp::wrap(runSAX(orgData, segmentSize, alphabetSize, iSAX));
    return __result;
END_RCPP
}
// runNormData
RObject runNormData(std::vector<float> data);
RcppExport SEXP rsax_runNormData(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<float> >::type data(dataSEXP);
    __result = Rcpp::wrap(runNormData(data));
    return __result;
END_RCPP
}
// runToPAA
RObject runToPAA(std::vector<float> data, int segSize);
RcppExport SEXP rsax_runToPAA(SEXP dataSEXP, SEXP segSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<float> >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type segSize(segSizeSEXP);
    __result = Rcpp::wrap(runToPAA(data, segSize));
    return __result;
END_RCPP
}
// runToSAX
RObject runToSAX(std::vector<float> data, int brkPtNum);
RcppExport SEXP rsax_runToSAX(SEXP dataSEXP, SEXP brkPtNumSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::vector<float> >::type data(dataSEXP);
    Rcpp::traits::input_parameter< int >::type brkPtNum(brkPtNumSEXP);
    __result = Rcpp::wrap(runToSAX(data, brkPtNum));
    return __result;
END_RCPP
}
